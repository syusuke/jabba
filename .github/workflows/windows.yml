# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Windows Go

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: fetch
      run: make fetch

    - name: test
      run: make test

#    - name: build
#      if: startsWith(github.ref, 'refs/tags/')
#      run: make build VERSION=${{ github.ref_name }}

    - name: build windows amd64
      run: |
        go env -w CGO_ENABLED=0
        go env -w GOOS=windows
        go env -w GOARCH=amd64
        go build -ldflags "-s -w -X main.version=${{ github.ref_name }}" -o release-windows/jabba.exe

    - name: copy windows shell
      run: cp -r windows release-windows/

    - name: copy install shell
      run: cp jabba-newinstall.ps1 release-windows/jabba.ps1

    - name: Zip
      run: |
        cd release-windows
        zip -r jabba-${{ github.ref_name }}.zip .

    - name: ls
      run: ls release-windows/

    - name: Upload Zip File
      uses: actions/upload-artifact@v4
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: windows zip file
        path: |
          release-windows/jabba-windows-${{ github.ref_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          release-windows/jabba-windows-${{ github.ref_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
